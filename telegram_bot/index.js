import { Telegraf, Scenes, session, Markup } from "telegraf"

import jwt from "jsonwebtoken"
import dotenv from "dotenv"

dotenv.config()

const bot = new Telegraf(process.env.BOT_TOKEN);

bot.start((ctx) => {
    ctx.replyWithHTML(`<b>–ë–æ—Ç MayAssist</b>`)
    ctx.replyWithHTML(`–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã: \n ‚Ä¢ –ü–æ–º–æ—â—å Service Desk`)
})

const serviceDeskScene = new Scenes.WizardScene(
    'serviceDesk',
    (ctx) => {
        ctx.wizard.state = {};
        ctx.reply('–ö–∞–∫–∞—è —Ç–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è?');
        return ctx.wizard.next();
    },
    (ctx) => {
        ctx.wizard.state.topic = ctx.message.text;
        ctx.reply('–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É');
        return ctx.wizard.next();
    },
    async (ctx) => {
        ctx.wizard.state.issue = ctx.message.text;;
        const helpMenu = Markup.inlineKeyboard([
            Markup.button.callback('1.01', '55712'),
            Markup.button.callback('1.02', '55694'),
            Markup.button.callback('1.03', '55646'),
        ]);
        ctx.replyWithHTML(
            '–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å \n\n ‚úâÔ∏è <b>1.01</b> –ü–æ–∏—Å–∫ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∏—Å–µ–º \n\n üñ• <b>1.02</b> –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—á—Ç—ã –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ \n\n üì±<b>1.03</b> –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—á—Ç—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ',
            helpMenu);
        return ctx.wizard.next()
    },
    async (ctx) => {
        if (ctx.callbackQuery) {
            ctx.wizard.state.service = ctx.callbackQuery.data;
        } else {
            ctx.wizard.state.service = '55712';
        }

        const chat_id = ctx.chat.id;
        const messageId = ctx.callbackQuery.message.message_id;
        await ctx.telegram.deleteMessage(chat_id, messageId);

        // const user_id = ctx.from.id
        // const callbackQuery = ctx.callbackQuery.id
        const token = jwt.sign({ chat_id }, process.env.JWT_SECRET)
        const topic = Buffer.from(ctx.wizard.state.topic, "utf-8").toString("base64")
        const issue = Buffer.from(ctx.wizard.state.issue, "utf-8").toString("base64")
        const service = ctx.wizard.state.service
        const url = `${process.env.FRONT_URL}apps/sd/new_issue?jwt_token=${token}&topic=${topic}&issue_body=${issue}&service_id=${service}`

        console.log(url)
        const inlineKeyboard = Markup.inlineKeyboard([
            Markup.button.url('–û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ', url)
        ]);
        ctx.reply("–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∑–¥–µ—Å—å", inlineKeyboard)
        return ctx.scene.leave();
    }
);
const stage = new Scenes.Stage([serviceDeskScene])

bot.use(session())
bot.use(stage.middleware())

bot.hears('–ü–æ–º–æ—â—å Service Desk', (ctx) => {
    ctx.scene.enter('serviceDesk')
})

bot.hears('Test', (ctx) => {
    const helpMenu = Markup.inlineKeyboard([
        Markup.button.callback('1.01', '1.01'),
        Markup.button.callback('1.02', '1.02'),
        Markup.button.callback('1.03', '1.03'),
    ]);
    ctx.reply('‚öôÔ∏è<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:</b> \n\n ‚úâÔ∏è1.01 –ü–æ–∏—Å–∫ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∏—Å–µ–º \n\n üñ• 1.02 –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—á—Ç—ã –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ \n\n üì±1.03 –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—á—Ç—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ',
        helpMenu);
})


bot.launch()